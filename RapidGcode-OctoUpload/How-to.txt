

**What are these files?**

- "Klipper.js" and "MPCNC Klipper Fusion 360.cps/.mch" are the post-processor files for Fusion 360.

- "Move_Post_Proc_Files.py" is a simple script that moves the 3 post-processor files
   to Fusion's post library folder. (You can delete "Move_Post_Proc_Files.py" after running it).

- "Python_Request_Install.py" will check if the "requests" plugin for Python is installed.
   If it's not, it will install it. (This is needed for Octo-Upload to work).

- "RapidGcode_OctoUpload.py" is the actual script that you need to run for it to change the values in the G-code.



**How to make sure it works:**

1. Download and install Python if you don't have it already.
   Make sure to tick the "PATH" box in the installer and reboot your PC.

2. Run "Move_Post_Proc_Files.py". Once the 3 post-processor files are moved, you can delete "Move_Post_Proc_Files.py".

3. Run "Python_Request_Install.py". If this fails, you'll have to google how to "pip install requests" if you don't know how to do it.
   If it says already installed or installed successfully, you can delete "Python_Request_Install.py".

4. Move "RapidGcode_OctoUpload.py" to the folder where Fusion 360 saves your G-codes after Post Processing.
   By default, it's "C:\Users\YOUR_USERNAME\Documents\Fusion 360\NC Programs" unless you changed it.

   DONE! If all those steps are completed, you can now use "RapidGcode_OctoUpload.py" to fix the feedrate of travel moves.

 ** For how to use "RapidGcode_OctoUpload.py" check the Github. ( https://github.com/Futtawuh/Rapid-Gcode )**